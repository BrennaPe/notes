*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root{
    --grey:#4D4F62;
    --light-grey:#6A7178;
    --white:#FFFFFF;
    --red:#EA5454;
    --cyan:#44D3D2;
    --blue:#549EF2;
    --orange:#FCAE4A;
    --font-family: poppins, sans-serif;
    --txt-present-1:600 36px/140% var(--font-family);
    --txt-present-2:200 36px/140% var(--font-family);
    --txt-present-3:600 20px/135% var(--font-family);
    --txt-present-4:400 15px/140% var(--font-family);
    --txt-present-5:400 13px/160% var(--font-family);
    --letter-spacing: 0.25px;
}

body{
    min-width: 100%;
    min-height: 100vh;
    font-family: var(--font-family);
}

/* ============== HEADER ============ */

header{
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 4.625rem;
}

header h1{
    color: var(--grey);
    font: var(--txt-present-1);
}

header h1 span{
    color: var(--grey);
    font: var(--txt-present-2);
}

header p{
    color: var(--grey);
    font: var(--txt-present-4);
    margin-bottom: 4.625rem;
    width: 540px;
    text-align: center;
}

/* ============== MAIN ============ */

main .container-main{
    display: grid;
    grid-template-columns: repeat(3, auto);
    grid-template-rows: repeat(4, auto);
     /* grid-template-rows: repeat(4, auto);  optional — you can remove if using auto-placement */

    /* border: 1px solid red; */
    gap: 32px;
    grid-auto-rows: min-content;   /* rows fit the *intrinsic* content height. tells the grid to size automatically created rows to the minimum required to fit their contents (so they don’t get taller than necessary).*/
    align-content: center;          /* prevents the grid from stretching vertically and aligne the content vertically */
    justify-content: center;        /* prevents horizontal stretching inside the container aaand i choose center to aligne my content in the center of the page.*/
    width: 100%;
   padding: 0px 32px;
    
}

/* ======== CARDS GENERAL ======= */
.card{
    max-width:21.875rem;
    /* height:15.625rem; fixed height forces rows to be tall. ill remove this in order to my grid follow de size of my content(cards). Let the cards size themselves (remove fixed height). ixed height forces all grid rows to make space even if content is smaller. Letting height be auto means rows shrink to fit contents. */
    border-radius: 8px;
    box-shadow: -1px 12px 22px -4px rgba(0, 0, 0, 0.547);
    overflow: hidden;
    /* padding: 32px; */
}

.card h2{
    color: var(--grey);
    font: var(--txt-present-3);
    margin-bottom: 6px;
    padding: 32px 32px 0px 32px ;
}

.card p{
    color: var(--light-grey);
    font: var(--txt-present-5);
    margin-bottom: 32px;
    padding: 0px 32px 0px 32px;
    
}

.icon-container{
    display: flex;
    flex-direction:row-reverse;
    padding-right: 32px ;
    margin-bottom: 32px;
}

/* =========== CARDS ========== */

.card1{
    grid-row: 2/4;
    grid-column: 1/2;
    justify-self: end;  /* Move to the right of its grid cell */ 
    align-self: end; /* Vertically centered within its cell */


}

.pop-of-colour1{
    height: 4px;
    width: 100%;
    background-color: var(--cyan);
}

.icon-supervisor{
    width: 64px;
    height: 64px;
    background-size: cover;
    background-position: center;
    background-image: url(assets/icon-supervisor.svg);
    
}

.card2{
    grid-row: 1/3;
    grid-column: 2/3;
    justify-self: center;  /* Move to the right of its grid cell */

}

.pop-of-colour2{
    height: 4px;
    width: 100%;
    background-color: var(--red);
}

.icon-team-builder{
    width: 64px;
    height: 64px;
    background-size: cover;
    background-position: center;
    background-image: url(assets/icon-team-builder.svg);
}

.card3{
    grid-row: 3/5;
    grid-column: 2/3;
    justify-self: center;  /* Move to the right of its grid cell */
}

.pop-of-colour3{
    height: 4px;
    width: 100%;
    background-color: var(--orange);
}

.icon-karma{
    width: 64px;
    height: 64px;
    background-size: cover;
    background-position: center;
    background-image: url(assets/icon-karma.svg);
}

.card4{
    grid-row: 2/4;
    grid-column: 3/4;
}

.pop-of-colour4{
    height: 4px;
    width: 100%;
    background-color: var(--blue);
}

.icon-calculator{
    width: 64px;
    height: 64px;
    background-size: cover;
    background-position: center;
    background-image: url(assets/icon-calculator.svg);
}

@media (max-width: 768px){

    /* header{
        padding-top: 1rem;
    }

    header p{
        margin-bottom: 2rem;
    } */
    main .container-main{
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-template-rows: repeat(3, auto);
    /* gap: 32px; */
    grid-auto-rows: min-content; 
    /* align-content: center; 
    justify-content: center; */
    width: 100%;
}
    .card1{
        grid-row: 2/3;
        grid-column: 1/2;
    }
    .card2{
        grid-row: 1/2;
        grid-column: 1/3;
    }
    .card4{
        grid-row: 3/4;
        grid-column: 1/3;
        justify-self: center;  /* Move to the right of its grid cell */
        margin-bottom: 32px;

    }
    .card3{
        grid-row: 2/3;
        grid-column: 2/3;
    }
}

@media (max-width: 600px){
    header{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 32px ;
    }

    header h1{
        font-size: 30px;
        margin-bottom: 30px;
        text-align: center;

    }

    header h1 span{
        font-size: 30px;
    }

    header p{
       max-width: 85%;
       margin-bottom: 0px;
    }

    main .container-main{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .card{
        min-width: 80%;
        height: 250px;
    
    }

    .card1{
    align-self: center; /* Vertically centered within its cell */
    }

}